////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2020 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#include "message.hpp"

////////////////////////////////////////////////////////////////////////////////
namespace osc
{

using namespace internal;

////////////////////////////////////////////////////////////////////////////////
message::message(string address) : address_(std::move(address))
{
    // TODO: validate address
}

////////////////////////////////////////////////////////////////////////////////
int32 message::space() const
{
    int32 total = 0;
    for(auto const& val : values()) total += val.space();
    return total;
}

////////////////////////////////////////////////////////////////////////////////
std::ostream& operator<<(std::ostream& os, const message& msg)
{
    write_to(os, msg.address());

    string tags = ",";
    for(auto const& val : msg.values()) tags += val.tag();
    write_to(os, tags);

    for(auto const& val : msg.values()) os << val;

    return os;
}

////////////////////////////////////////////////////////////////////////////////
}
