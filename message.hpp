////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2020 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#ifndef OSC_MESSAGE_HPP
#define OSC_MESSAGE_HPP

////////////////////////////////////////////////////////////////////////////////
#include "types.hpp"
#include "value.hpp"

#include <ostream>
#include <vector>

////////////////////////////////////////////////////////////////////////////////
namespace osc
{

////////////////////////////////////////////////////////////////////////////////
class message
{
public:
    message(string address);

    auto const& address() const { return address_; }
    auto const& values() const { return values_; }

    int32 space() const;

    message& operator<<(value v)
    {
        values_.push_back(std::move(v));
        return *this;
    }

private:
    string address_;
    std::vector<value> values_;
};

////////////////////////////////////////////////////////////////////////////////
std::ostream& operator<<(std::ostream&, const message&);

////////////////////////////////////////////////////////////////////////////////
}

////////////////////////////////////////////////////////////////////////////////
#endif
